---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';

// Get all research projects
const allProjects = await getCollection('research');

// Render content for each project
const projectsWithContent = await Promise.all(
  allProjects.map(async (project) => {
    const { Content } = await project.render();
    return {
      ...project,
      Content
    };
  })
);

// Sort projects by startDate (newest first)
const sortedProjects = projectsWithContent.sort((a, b) => 
  b.data.startDate.getTime() - a.data.startDate.getTime()
);

// Get unique values for filters and sort them
const allStatuses = [...new Set(allProjects.map(project => project.data.status))].sort();
const allPartners = [...new Set(allProjects.map(project => project.data.partner))].sort();
console.log('Available statuses:', allStatuses);
console.log('Available partners:', allPartners);

---

<BaseLayout 
  pageTitle="Research"
  description="Research areas and projects at NYCU ADSL Lab"
>
  <div class="bg-white">
    <!-- Hero Section -->
    <section class="bg-gradient-to-br from-blue-600 via-blue-700 to-indigo-800 text-white py-16">
      <div class="container mx-auto px-4 sm:px-6 lg:px-8">
        <div class="text-center">
          <h1 class="text-4xl sm:text-5xl font-bold mb-6">研究計畫</h1>
          <p class="text-xl text-blue-100 max-w-3xl mx-auto leading-relaxed">
            我們的研究涵蓋人工智慧、機器學習與系統工程的多個交叉領域。
            專注於理論基礎與實際應用，致力於解決真實世界的挑戰性問題。
          </p>
        </div>
      </div>
    </section>
    
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-16">
      <!-- Filters Section -->
      <section class="mb-12">
        <div class="bg-white rounded-2xl shadow-lg border p-6">
          <h3 class="text-lg font-semibold text-gray-900 mb-4">Filters</h3>
            
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
              <!-- Status Filter -->
              <div>
                <label for="status-filter" class="block text-sm font-medium text-gray-700 mb-2">Status</label>
                <select id="status-filter" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                  <option value="">All Status</option>
                  <option value="in_progress">In Progress</option>
                  <option value="completed">Completed</option>
                </select>
              </div>
              
              <!-- Partner Filter -->
              <div>
                <label for="partner-filter" class="block text-sm font-medium text-gray-700 mb-2">資助來源</label>
              <select id="partner-filter" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                <option value="">全部來源</option>
                {allPartners.map(partner => (
                  <option value={partner}>{partner}</option>
                ))}
              </select>
            </div>
            
          </div>
          
          <div class="mt-4 flex space-x-3">
            <button id="clear-filters" class="px-4 py-2 text-sm font-medium text-gray-600 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors duration-200">
              Clear Filters
            </button>
            <div id="project-count" class="px-4 py-2 text-sm text-gray-600 bg-blue-50 rounded-lg">
              {sortedProjects.length} Projects
            </div>
          </div>
        </div>
      </section>

      <!-- Research Projects -->
      <section class="mb-20">
        <div id="projects-container" class="space-y-12">
          {sortedProjects.map((project, index) => (
            <div 
              class="project-card bg-white rounded-3xl shadow-2xl border overflow-hidden p-8 lg:p-12"
              data-status={project.data.status}
              data-partner={project.data.partner}
            >
              <div class="flex items-center mb-6">
                <span class={`px-4 py-2 rounded-full text-sm font-medium mr-4 ${
                  project.data.status === 'in_progress' 
                    ? 'bg-green-100 text-green-800' 
                    : 'bg-blue-100 text-blue-800'
                }`}>
                  {project.data.status === 'in_progress' ? 'In Progress' : 'Completed'}
                </span>
                <span class="text-sm text-gray-500 bg-gray-100 px-3 py-1 rounded-full">
                  {project.data.startDate.toLocaleDateString('zh-TW', { year: 'numeric', month: '2-digit' })} - 
                  {project.data.status === 'in_progress' ? '至今' : project.data.endDate.toLocaleDateString('zh-TW', { year: 'numeric', month: '2-digit' })}
                </span>
                <span class="text-sm text-blue-600 bg-blue-50 px-3 py-1 rounded-full ml-2">{project.data.partner}</span>
              </div>
              
              <h3 class="text-2xl lg:text-3xl font-bold text-gray-900 mb-6">{project.data.title}</h3>
              
              <div class="prose prose-lg max-w-none text-gray-600 leading-relaxed">
                <project.Content />
              </div>
            </div>
          ))}
        </div>
        
        <!-- No Results Message -->
        <div id="no-results" class="hidden text-center py-12">
          <div class="text-gray-400 mb-4">
            <svg class="w-16 h-16 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.172 16.172a4 4 0 015.656 0M9 12h6m-6-4h6m2 5.291A7.962 7.962 0 0112 15c-2.34 0-4.47-.881-6.08-2.33"></path>
            </svg>
          </div>
          <h3 class="text-xl font-semibold text-gray-600 mb-2">沒有找到符合條件的專案</h3>
          <p class="text-gray-500">請嘗試調整篩選條件</p>
        </div>
      </section>
    </div>
  </div>
</BaseLayout>

<script>
  // Filter functionality
  const statusFilter = document.getElementById('status-filter') as HTMLSelectElement;
  const partnerFilter = document.getElementById('partner-filter') as HTMLSelectElement;
  const clearFiltersBtn = document.getElementById('clear-filters') as HTMLButtonElement;
  const projectCards = document.querySelectorAll('.project-card') as NodeListOf<HTMLElement>;
  const projectCount = document.getElementById('project-count') as HTMLElement;
  const noResults = document.getElementById('no-results') as HTMLElement;

  // Set default status filter to "in_progress"
  statusFilter.value = "in_progress";
  // Initial filter on load
  filterProjects();

  function filterProjects() {
    const statusValue = statusFilter.value;
    const partnerValue = partnerFilter.value;
    
    let visibleCount = 0;
    
      projectCards.forEach(card => {
      const cardStatus = card.dataset.status || '';
      const cardPartner = card.dataset.partner || '';
      const matchesStatus = !statusValue || cardStatus === statusValue;
      const matchesPartner = !partnerValue || cardPartner === partnerValue;
      
      const shouldShow = matchesStatus && matchesPartner;
      
      if (shouldShow) {
        card.style.display = 'block';
        visibleCount++;
      } else {
        card.style.display = 'none';
      }
    });
    
    // Update project count
    projectCount.textContent = `${visibleCount} Projects`;
    
    // Show/hide no results message
    if (visibleCount === 0) {
      noResults.classList.remove('hidden');
    } else {
      noResults.classList.add('hidden');
    }
  }

  function clearFilters() {
    statusFilter.value = 'in_progress';
    partnerFilter.value = '';
    filterProjects();
  }

  // Add event listeners
  statusFilter.addEventListener('change', filterProjects);
  partnerFilter.addEventListener('change', filterProjects);
  clearFiltersBtn.addEventListener('click', clearFilters);
</script>
</BaseLayout>