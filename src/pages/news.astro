---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import Banner from '../components/Banner.astro';
import NewsSummaryCard from '../components/NewsSummaryCard.astro';
const allNews = await getCollection('news');
const items = allNews
  .sort((a, b) => b.data.date.getTime() - a.data.date.getTime());

const tagSet = ["Publication", "Event"];
const tags = ['All', ...Array.from(tagSet)];
---

<BaseLayout 
  pageTitle="News"
  description="Latest news and updates from NYCU ADSL Lab"
>
  <div class="bg-white">
    <!-- Hero Section -->
    <Banner 
      title="Lab News & Updates"
      subtitle="Stay updated with the latest developments, achievements, and announcements from our lab."
      imageUrl="https://images.unsplash.com/photo-1495020689067-958852a7765e?auto=format&fit=crop&w=2134&q=80"
      heightClass="py-20"
      overlayClass="bg-black/60"
    />
    
    <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-16">
      <!-- Filter Buttons -->
      <div class="mb-12">
        <div class="bg-white rounded-2xl shadow-lg border p-6">
          <div class="flex flex-wrap justify-center gap-3" role="tablist">
            {tags.map((tag, index) => (
              <button 
                class={`px-6 py-3 rounded-full text-sm font-medium transition-all duration-200 ${
                  index === 0 
                    ? 'bg-blue-600 text-white shadow-lg' 
                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200 hover:shadow-md'
                }`}
                data-filter={tag.toLowerCase()}
                role="tab"
              >
                {tag}
              </button>
            ))}
          </div>
        </div>
      </div>

      <div class="grid gap-8" id="news-list">
        {items.map((item) => (
          <div data-news-wrapper data-tag={item.data.tag.toLowerCase()}>
            <a href={`/news/${item.slug}`} class="block">
              <NewsSummaryCard 
                id={item.id}
                title={item.data.title}
                date={item.data.date}
                tag={item.data.tag}
                summary={item.data.summary ?? ''}
              />
            </a>
          </div>
        ))}
      </div>
    </div>
  </div>
</BaseLayout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const wrappers = document.querySelectorAll('[data-news-wrapper]');
    const filterButtons = document.querySelectorAll('[data-filter]');

    // Tag filtering
    function applyFilter(tagValue: string) {
      const value = tagValue.toLowerCase();
      wrappers.forEach((wrapper) => {
        const t = (wrapper as HTMLElement).dataset.tag || '';
        const show = value === 'all' || t === value;
        (wrapper as HTMLElement).style.display = show ? 'block' : 'none';
      });
    }

    filterButtons.forEach((btn) => {
      btn.addEventListener('click', () => {
        const selected = (btn as HTMLElement).getAttribute('data-filter') || 'all';
        // Update button styles
        filterButtons.forEach((b) => {
          if (b === btn) {
            (b as HTMLElement).className = 'px-6 py-3 rounded-full text-sm font-medium transition-all duration-200 bg-blue-600 text-white shadow-lg';
          } else {
            (b as HTMLElement).className = 'px-6 py-3 rounded-full text-sm font-medium transition-all duration-200 bg-gray-100 text-gray-700 hover:bg-gray-200 hover:shadow-md';
          }
        });
        applyFilter(selected);
      });
    });

    // Default filter: All
    applyFilter('all');
  });
</script>